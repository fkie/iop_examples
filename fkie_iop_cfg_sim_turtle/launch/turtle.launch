<?xml version="1.0"?>
<launch>
    <node name="turtle" pkg="turtlesim" type="turtlesim_node" respawn="true" />

    <node name="turtle2iop" pkg="fkie_iop_cfg_sim_turtle" type="turtle2iop.py">
    </node>
    <!-- JAUS configuration used by IOP bridge components
         EnableLoopback  = "2" enables you to catch the UDP messages by wireshark. -->
    <param name="jaus_config" value="$(find jaustoolset)/cfg/nm.cfg"/>
    
    <param name="name_subsystem" value="turtle"/>
    <node name="iop_platform_manager" pkg="fkie_iop_component" type="iop_component">
        <param name="name_node" value="platform manager"/>
        <param name="iop_address" value="1.1.15"/>
        <rosparam param="services">
            [
            fkie_iop_discovery: "Discovery",
            fkie_iop_liveness: "Liveness",
            fkie_iop_health_monitor: "HealthMonitor",
            # add PrimitiveDriver to control the turtle
            fkie_iop_primitive_driver: "PrimitiveDriver",
            fkie_iop_velocity_state_sensor: "VelocityStateSensor",
            fkie_iop_local_pose_sensor: "LocalPoseSensor"
            ]
        </rosparam>
        <rosparam subst_value="true">
            Discovery:
                system_id: 2  # 2: Subsystem Identification, 3: Node Identification, 4: Component Identification
                system_type: 10001  # 10001: VEHICLE, 20001: OCU, 30001: OTHER_SUBSYSTEM, 40001: NODE, 50001: PAYLOAD, 60001: COMPONENT
            PrimitiveDriver:
                max_linear_x: 3.0
                max_angular_z: -1.5
                # do not use the stamped twist messages
                use_stamped: false
                # added remap to catch commands from the right topic or use 'remap' of launch file
                topic_pub_cmd_vel: /turtle1/cmd_vel
            LocalPoseSensor:
                source_type: 2
        </rosparam>
    </node>
 </launch>
